{"ast":null,"code":"var _jsxFileName = \"/Users/shahana/Desktop/01-starting-setup/src/components/Participants.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Participants = () => {\n  _s();\n\n  const [participants, setParticipants] = useState([]);\n\n  const fetchData = () => {\n    return axios.get(`https://api.sampleapis.com/futurama/episodes`).then(function (_ref) {\n      let {\n        data\n      } = _ref;\n      return data;\n    }).catch(function (error) {\n      return error;\n    });\n  };\n\n  useEffect(() => {\n    fetchData().then(results => {\n      setParticipants(results);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(EpisodeWrapper, {\n      children: episodeData.map((episode, id) => /*#__PURE__*/_jsxDEV(EpisodeContainer, {\n        children: [/*#__PURE__*/_jsxDEV(VideoWrapper, {\n          children: /*#__PURE__*/_jsxDEV(YoutubeEmbed, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(NameWrapper, {\n          children: episode.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DateWrapper, {\n          children: [\"Air Date: \", episode.originalAirDate, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DescWrapper, {\n          children: episode.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Participants, \"nHYwA4EcJLbZLF+vxFzWucL1xak=\");\n\n_c = Participants;\nexport default Participants;\n\nvar _c;\n\n$RefreshReg$(_c, \"Participants\");","map":{"version":3,"sources":["/Users/shahana/Desktop/01-starting-setup/src/components/Participants.js"],"names":["React","Participants","participants","setParticipants","useState","fetchData","axios","get","then","data","catch","error","useEffect","results","episodeData","map","episode","id","title","originalAirDate","desc"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCC,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMC,SAAS,GAAG,MAAM;AACtB,WAAOC,KAAK,CACTC,GADI,CACC,8CADD,EAEJC,IAFI,CAEC,gBAAoB;AAAA,UAAV;AAAEC,QAAAA;AAAF,OAAU;AACxB,aAAOA,IAAP;AACD,KAJI,EAKJC,KALI,CAKE,UAAUC,KAAV,EAAiB;AACtB,aAAOA,KAAP;AACD,KAPI,CAAP;AAQD,GATD;;AAWAC,EAAAA,SAAS,CAAC,MAAM;AACdP,IAAAA,SAAS,GAAGG,IAAZ,CAAkBK,OAAD,IAAa;AAC5BV,MAAAA,eAAe,CAACU,OAAD,CAAf;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAKA,sBACE;AAAA,2BACE,QAAC,cAAD;AAAA,gBACGC,WAAW,CAACC,GAAZ,CAAgB,CAACC,OAAD,EAAUC,EAAV,kBACf,QAAC,gBAAD;AAAA,gCACE,QAAC,YAAD;AAAA,iCACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,WAAD;AAAA,oBAAcD,OAAO,CAACE;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,WAAD;AAAA,mCAAwBF,OAAO,CAACG,eAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME,QAAC,WAAD;AAAA,oBAAcH,OAAO,CAACI;AAAtB;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA,SAAuBH,EAAvB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAnCD;;GAAMhB,Y;;KAAAA,Y;AAqCN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\n\nconst Participants = () => {\n  const [participants, setParticipants] = useState([]);\n\n  const fetchData = () => {\n    return axios\n      .get(`https://api.sampleapis.com/futurama/episodes`)\n      .then(function ({ data }) {\n        return data;\n      })\n      .catch(function (error) {\n        return error;\n      });\n  };\n\n  useEffect(() => {\n    fetchData().then((results) => {\n      setParticipants(results);\n    });\n  }, []);\n  return (\n    <div>\n      <EpisodeWrapper>\n        {episodeData.map((episode, id) => (\n          <EpisodeContainer key={id}>\n            <VideoWrapper>\n              <YoutubeEmbed></YoutubeEmbed>\n            </VideoWrapper>\n            <NameWrapper>{episode.title}</NameWrapper>\n            <DateWrapper>Air Date: {episode.originalAirDate} </DateWrapper>\n            <DescWrapper>{episode.desc}</DescWrapper>\n          </EpisodeContainer>\n        ))}\n      </EpisodeWrapper>\n    </div>\n  );\n};\n\nexport default Participants;\n"]},"metadata":{},"sourceType":"module"}